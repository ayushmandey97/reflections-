How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    The diff command pointed out the lines of difference in the old version and the new version files
    so it's easier to figure out the bugs in the new file.


How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?
	Having access to the entire history enables to revisit old versions to see how the program has evolved 
	and check out what all cool stuff I've built along the way.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
	When we manually choose when to commit, we can avoid unnecessary saving of versions in which no logical changes have been
	made, also there maybe cases where the commits are saved in a time where they dont make much sense.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
	Because version controlling systems like git are created just for code. Thus they have been designed keeping in ming that multiple files are connected to each other, wheras google docs etc dont consider that.

How can you use the commands git log and git diff to view the history of files?
	using git log gives all the details of commits made to the project and git diff allows us to find out the 
	differences in the code to find out the bugs created.

How might using version control make you more confident to make changes that could break something?
	version control would allow us to go back to previous versions whenever we please , so that if we by chance 'break something'
	then we have an error free version to go back to.

Now that you have your workspace set up, what do you want to try using Git for?
	Now I want to use git for version controlling you dimwit.








    

    